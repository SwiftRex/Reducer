{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF16GlobalActionTypeL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ActionType","preciseIdentifier":"s:7ReducerAAV10ActionTypexmfp"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalStateType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF15GlobalStateTypeL_qd_0_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:7ReducerAAV9StateTypeq_mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Reducer\/documentation\/Reducer\/Reducer","preciseIdentifier":"s:7ReducerAAV","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF16GlobalActionTypeL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF15GlobalStateTypeL_qd_0_mfp"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"a "},{"type":"codeVoice","code":"Reducer<GlobalAction, GlobalState>"},{"type":"text","text":" that maps actions and states from the original specialised"},{"type":"text","text":" "},{"type":"text","text":"reducer into a more generic and global reducer, to be used in a larger context."}]}]},{"kind":"parameters","parameters":[{"name":"action","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a read-only key-path from global action into a local action, but it’s optional because maybe this"},{"type":"text","text":" "},{"type":"text","text":"reducer shouldn’t care about certain actions. Because actions are usually enums, you can switch over"},{"type":"text","text":" "},{"type":"text","text":"the enum and in case it’s nothing you care about, you simply return nil in the closure. If you don’t"},{"type":"text","text":" "},{"type":"text","text":"want to lift this reducer in terms of "},{"type":"codeVoice","code":"action"},{"type":"text","text":", just remove this parameter from the call."}]}]},{"name":"state","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a writable key-path from global state that traverses into a local state, by extracting only the part"},{"type":"text","text":" "},{"type":"text","text":"that it’s relevant for this reducer. This will also be used to set the new local state into the global"},{"type":"text","text":" "},{"type":"text","text":"state once the reducer finishes it’s operation. For example: "},{"type":"codeVoice","code":"\\.currentGame.scoreBoard"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s suppose you may want to have a "},{"type":"codeVoice","code":"gpsReducer"},{"type":"text","text":" that knows about the following "},{"type":"codeVoice","code":"struct"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["struct Location {","    let latitude: Double","    let longitude: Double","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s call it "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":". Both, this state and its reducer will be part of an external framework, used by dozens of"},{"type":"text","text":" "},{"type":"text","text":"apps. Internally probably the "},{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" will receive some known "},{"type":"codeVoice","code":"ActionType"},{"type":"text","text":" and calculate a new location. On the"},{"type":"text","text":" "},{"type":"text","text":"main app we have a global state, that we now call "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["struct MyGlobalState {","    let title: String?","    let listOfItems: [Item]","    let currentLocation: Location","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As expected, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":" ("},{"type":"codeVoice","code":"Location"},{"type":"text","text":") is a property of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":" ("},{"type":"codeVoice","code":"MyGlobalState"},{"type":"text","text":"). This relationship could be less"},{"type":"text","text":" "},{"type":"text","text":"direct, for example there could be several levels of properties until you find the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":" in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", like"},{"type":"text","text":" "},{"type":"codeVoice","code":"global.firstLevel.secondLevel.currentLocation"},{"type":"text","text":", but let’s keep it a single-level for this example."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because our "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" understands "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":" ("},{"type":"codeVoice","code":"MyGlobalState"},{"type":"text","text":") and our "},{"type":"codeVoice","code":"gpsReducer"},{"type":"text","text":" understands "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":" ("},{"type":"codeVoice","code":"Location"},{"type":"text","text":"), we"},{"type":"text","text":" "},{"type":"text","text":"must "},{"type":"codeVoice","code":"lift"},{"type":"text","text":" the "},{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" to the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":" level, by using:"}]},{"type":"codeListing","syntax":null,"code":["let globalStateReducer = gpsReducer.lift(","    action: \\.self,","    state: \\.currentLocation",")","\/\/ where:","\/\/   globalStateReducer: Reducer<MyAction, MyGlobalState>","\/\/                                             ↑ lift","\/\/           gpsReducer: Reducer<MyAction, Location>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now this reducer can be used within our "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" or even composed with others. It also can be used in other apps as"},{"type":"text","text":" "},{"type":"text","text":"long as we have a way to lift it to the world of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Same strategy works for the "},{"type":"codeVoice","code":"action"},{"type":"text","text":", as you can guess by the "},{"type":"codeVoice","code":"action"},{"type":"text","text":" KeyPath parameter. You can provide a KeyPath"},{"type":"text","text":" "},{"type":"text","text":"that takes a global action ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":") and returns an optional local action ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":"). It’s optional because perhaps"},{"type":"text","text":" "},{"type":"text","text":"you want to ignore actions that are not relevant for this reducer."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/reducer\/reducer\/lift(action:state:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Reducer\/documentation\/Reducer\/Reducer\/lift(action:state:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A type-lifting method. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that is a"},{"type":"text","text":" "},{"type":"text","text":"sub-state."}],"kind":"symbol","metadata":{"role":"symbol","title":"lift(action:state:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF16GlobalActionTypeL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ActionType","preciseIdentifier":"s:7ReducerAAV10ActionTypexmfp"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalStateType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF15GlobalStateTypeL_qd_0_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:7ReducerAAV9StateTypeq_mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:7ReducerAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF16GlobalActionTypeL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF15GlobalStateTypeL_qd_0_mfp"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF","extendedModule":"Reducer","modules":[{"name":"Reducer"}]},"hierarchy":{"paths":[["doc:\/\/Reducer\/documentation\/Reducer","doc:\/\/Reducer\/documentation\/Reducer\/Reducer"]]},"references":{"doc://Reducer/documentation/Reducer/Reducer/lift(action:state:)":{"role":"symbol","title":"lift(action:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF16GlobalActionTypeL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ActionType","preciseIdentifier":"s:7ReducerAAV10ActionTypexmfp"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalStateType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF15GlobalStateTypeL_qd_0_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:7ReducerAAV9StateTypeq_mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:7ReducerAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF16GlobalActionTypeL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType","preciseIdentifier":"s:7ReducerAAV4lift6action5stateAByqd__qd_0_Gs7KeyPathCyqd__xSgG_s08WritableeF0Cyqd_0_q_Gtr0_lF15GlobalStateTypeL_qd_0_mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A type-lifting method. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that is a"},{"type":"text","text":" "},{"type":"text","text":"sub-state."}],"identifier":"doc:\/\/Reducer\/documentation\/Reducer\/Reducer\/lift(action:state:)","kind":"symbol","type":"topic","url":"\/documentation\/reducer\/reducer\/lift(action:state:)"},"doc://Reducer/documentation/Reducer":{"role":"collection","title":"Reducer","abstract":[],"identifier":"doc:\/\/Reducer\/documentation\/Reducer","kind":"symbol","type":"topic","url":"\/documentation\/reducer"},"doc://Reducer/documentation/Reducer/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"An entity that calculates the new state when given current state and an incoming action "},{"type":"codeVoice","code":"(Action, inout State) -> Void"},{"type":"text","text":"."}],"identifier":"doc:\/\/Reducer\/documentation\/Reducer\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/reducer\/reducer"}}}